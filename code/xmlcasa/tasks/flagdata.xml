<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
      file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="flagdata" category="data editing">
        <shortdescription> All purpose flagging task based on selections</shortdescription>
        <description>
        The task will select a subset of data explicitly for flagging,
        quacking, clipping, and autocorrelation flagging, or flagging
        of shadowed antennas. Unflagging is also available.

        In a dual polarization data set, each polarization can be flagged
        separately.  However, at present the calibration and imaging will
        only use data with both parallel hands unflagged.

        There is a vector mode of operation to execute several flagging options
        in one execution.

        </description>
        <input>
                <param type="string" name="vis" mustexist="true">
                        <description>Name of file to flag</description>
                        <value></value>
                </param>

                <param type="string" name="mode">
                        <description>Mode (manualflag,quack,shadow,autoflag,summary,alma)</description>
                        <value>manualflag</value>
                        <allowed kind="enum">
                        <value>manualflag</value>
                        <value>autoflag</value>
                        <value>summary</value>
                        <value>quack</value>
                        <value>shadow</value>
                        <value>alma</value>
                        </allowed>
                </param>

                <param type="any" name="spw">
                        <description>spectral-window/frequency/channel</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="field">
                        <description>Field names or field index numbers: \'\'==>all, field=\'0~2,3C286\'</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="bool" name="selectdata">
                        <description>More data selection parameters (antenna, timerange etc)</description>
                        <value>True</value>
                </param>

                <param type="any" name="antenna" subparam="true">
                        <description>antenna/baselines: \'\'==>all, antenna = \'3,VA04\'</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="uvrange" subparam="true">
                        <description>uv range: \'\'==>all; uvrange = \'0~100klambda\', default units=meters</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="timerange" subparam="true">
                        <description>time range: \'\'==>all, timerange=\'09:14:0~09:54:0\'</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="correlation" subparam="true">
                        <description>Select data based on correlation</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="scan" subparam="true">
                        <description>scan numbers: \'\'==>all</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="feed" subparam="true">
                        <description>multi-feed numbers: Not yet implemented</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="array" subparam="true">
                        <description>(sub)array numbers: \'\'==>all</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string"></value>
                </param>

                <param type="any" name="clipexpr" subparam="true">
                        <description>Expression to clip on</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string">ABS RR</value>
                </param>

                <param type="any" name="clipminmax" subparam="true">
                        <description>Range to use for clipping</description>
                        <any type="variant" limittypes="doubleArray doubleArrayArray"/>
                        <value type="doubleArray"></value>
                </param>

                <param type="any" name="clipcolumn" subparam="true">
                        <description>Data column to use for clipping</description>
                        <any type="variant" limittypes="string stringArray"/>
                        <value type="string">DATA</value>
                         <!-- <allowed kind="enum">
                           <value>'DATA'</value>
                           <value>'CORRECTED'</value>
                           <value>'MODEL'</value>
                        </allowed> -->
                </param>

                <param type="any" name="clipoutside" subparam="true">
                        <description>Clip outside the range, or within it</description>
                        <any type="variant" limittypes="bool boolArray"/>
                        <value type="bool">True</value>
                </param>

                <param type="any" name="quackinterval" subparam="true">
                        <description>Quack n seconds from scan beginning</description>
                        <any type="variant" limittypes="double doubleArray"/>
                        <value type="double">0.0</value>
                </param>

                <param type="any" name="autocorr" subparam="true">
                        <description>Flag autocorrelations</description>
                        <any type="variant" limittypes="bool boolArray"/>
                        <value type="bool">False</value>
                </param>

                <param type="any" name="unflag" subparam="true">
                        <description>Unflag the data specified</description>
                        <any type="variant" limittypes="bool boolArray"/>
                        <value type="bool">False</value>
                </param>

                <param type="string" name="algorithm" subparam="true">
                        <description>Autoflag algorithm (timemed,freqmed)</description>
                        <value>timemed</value>
                        <allowed kind="enum">
                        <value>timemed</value>
                        <value>freqmed</value>
                        </allowed>
                </param>

                <param type="string" name="recipe" subparam="true">
                        <description>Flagging algorithm (pdb_recipe,vla_recipe)</description>
                        <value>vla_recipe</value>
                        <allowed kind="enum">
                        <value>pdb_recipe</value>
                        <value>vla_recipe</value>
                        </allowed>
                </param>

                <param type="string" name="column" subparam="true">
                        <description>Data column to operate on.</description>
                        <value>DATA</value>
                        <allowed kind="enum">
                        <value>DATA</value>
                        <value>CORRECTED</value>
                        <value>MODEL</value>
                        </allowed>
                </param>

                <param type="string" name="expr" subparam="true">
                        <description>Expression to flag on</description>
                        <value>ABS RR</value>
                </param>

                <param type="double" name="thr" subparam="true">
                        <description>Flagging threshold (n sigma)</description>
                        <value>5.0</value>
                </param>

                <param type="int" name="window" subparam="true">
                        <description>Sliding median filter width</description>
                        <value>10</value>
                </param>

                <param type="double" name="diameter" subparam="true">
                        <description>Effective diameter (m) to use. -1 ==>antenna diameter</description>
                        <value>-1.0</value>
                </param>

                <constraints>
                        <when param="mode">
                                <equals value="manualflag">
                                        <default param="autocorr"><value type="bool">False</value></default>
                                        <default param="unflag"><value type="bool">False</value></default>
                                        <default param="clipexpr"><value type="string">ABS RR</value></default>
                                        <default param="clipminmax"><value type="doubleArray"></value></default>
                                        <default param="clipcolumn"><value type="string">DATA</value></default>
                                        <default param="clipoutside"><value type="bool">True</value></default>
                                </equals>
                                <equals value="autoflag">
                                        <default param="algorithm"><value type="string">timemed</value></default>
                                        <default param="column"><value type="string">DATA</value></default>
                                        <default param="expr"><value type="string">ABS RR</value></default>
                                        <default param="thr"><value type="double">5.0</value></default>
                                        <default param="window"><value type="int">10</value></default>
                                </equals>
                                <equals value="quack">
                                        <default param="autocorr"><value type="bool">False</value></default>
                                        <default param="unflag"><value type="bool">False</value></default>
                                        <default param="quackinterval"><value type="double">0.0</value></default>
                                </equals>
                                <equals value="summary"/>
                                <equals value="shadow">
                                        <default param="diameter"><value type="double">-1.0</value></default>
                                </equals>
                                <equals value="alma">
                                        <default param="recipe"><value type="string">vla_recipe</value></default>
                                </equals>
                        </when>
                        <when param="selectdata">
                                <equals type="bool" value="True">
                                        <default param="antenna"><value type="string"></value></default>
                                        <default param="timerange"><value type="string"></value></default>
                                        <default param="correlation"><value type="string"></value></default>
                                        <default param="scan"><value type="string"></value></default>
                                        <default param="feed"><value type="string"></value></default>
                                        <default param="array"><value type="string"></value></default>
                                        <default param="uvrange"><value type="string"></value></default>
                                </equals>
                                <equals type="bool" value="False"/>
                        </when>
                </constraints>
        </input>
<returns type="void"/>

<example>

        The task will flag a subset of data explicitly with the modes:
            manualflag = flagging based on specific selection parameter
                 plus clipping and flagging autcorrelations;
            quack = remove specific time range at scan beginning;
            shadow = remove antenna-shadowed data;
            autoflag = experimental auto-flagging outliers;
            summary = report the amount of flagged flagged.

        Unflagging is also available with all options (except shadowing)

        Note: I a dual polarization data set, each polarization can be flagged
        separately.  However, at present the calibration and imaging will
        only use only data with both parallel hands unflagged.

        Keyword arguments:
        vis -- Name of input visibility file
                default: none example: vis='ngc5921.ms'
        mode -- Mode of operation.
                options: 'manualflag','autoflag','summary','quack','shadow'
                default: 'manualflag'

        manualflag --  option does data-selected flagging.
               If autocorr = F; clipminmax = [], then
                  flagging or unflagging [unflag=F, unflag=T] is specified by
                  the data selection parameters.
                     
           Other flagging options, with the appropriate data selection
           parameters, that are available are:

              autocorr -- Flag autocorrelations 
                  default: False
                  options: True,False

              clipexpr -- Clip using the following:
                default: 'ABS RR'; example: clipexpr='RE XX'
                Options: 'ABS','ARG','RE','IM','NORM' + ' ' +
                          'I','XX','YY','RR','LL'
              clipminmax -- Range of data (Jy) that will NOT be flagged
                default: [] means do not use clip option
                example: [0.0,1.5]
              clipcolumn -- Column to use for clipping.
                default: 'DATA'
                options: 'DATA','CORRECTED','MODEL'
              clipoutside -- Clip OUTSIDE the range ?
                default: True
                example: False -&gt; flag data WITHIN the range.
              unflag -- Unflag the specified data
                default: False (i.e. flag); example: unflag=True
              
        quack: option to remove specified part of scan beginning
           quackinterval -- Time in seconds from scan beginning to flag
                Make time slightly small than desired time
           unflag -- Unflag the data
                default =&gt; False (quack as indicated)
                           True (unquack)
           autocorr -- Flag autocorrelations (independent option)
                default =&gt; False

        shadow: option to flag data of shadowed antennas
           diameter -- effective diameter to use when determining if an antenna
                    is shadowed at a given time stamp. The given value is used
                    for all antennas. If this is set to a negative number
                    (default), the actual antenna diameters are used.

        summary: lists number of rows and data points flagged
           No subparameters

        autoflag: experimental automatic flagging of outliers.
           It is still under development
           algorithm -- autoflag algorithm name
                default: 'timemed'
                options: 'timemed','freqmed'
           column -- the column on which to operate (DATA, CORRECTED, MODEL)
           expr -- expression to use for flagging option
                default: 'ABS RR'; example: expr='RE XX'
                Options: 'ABS','ARG','RE','IM','NORM' + ' ' +
                     'I','XX','YY','RR','LL'
           thr -- flagging threshold as a multiple of standard-deviation ( n sigma )
           window -- half width for sliding window median filters.  The size should be
                  about the number of integration in a scan, or the number of
                  spectral channels.


        selectdata -- Other data selection parameters
                default: True
        antenna -- Select data based on baseline
                default: '' (all); example: antenna='5&amp;6' baseline 5-6
                antenna='5&amp;6;7&amp;8' #baseline 5-6 and 7-8
                antenna='5' # all baselines with antenna 5
                antenna='5,6' # all baselines with antennas 5 and 6
        spw -- Select data based on spectral window and channels
                default: '' (all); example: spw='1'
                spw='&lt;2' #spectral windows less than 2
                spw='&gt;1' #spectral windows greater than 1
                spw='0:0~10' # first 10 channels from spw 0
                spw='0:0~5;56~60' # multiple separated channel chunks.
        correlation -- Correlation types
                default: '' (all);
                example: correlation='RR LL'
        field -- Select data based on field id(s) or name(s)
                default: '' (all); example: field='1'
                field='0~2' # field ids inclusive from 0 to 2
                field='3C*' # all field names starting with 3C
        uvrange -- Select data within uvrange (default units meters)
                default: '' (all); example:
                uvrange='0~1000klambda'; uvrange from 0-1000 kilo-lamgda
                uvrange='&gt;4klamda';uvranges greater than 4 kilo-lambda
                uvrange='0~1000km'; uvrange in kilometers
        timerange  -- Select data based on time range:
                default = '' (all); example,
                timerange = 'YYYY/MM/DD/hh:mm:ss~YYYY/MM/DD/hh:mm:ss'
                Note: YYYY/MM/DD can be dropped as needed:
                timerange='09:14:0~09:54:0' # this time range
                timerange='09:44:00' # data within one integration of time
                timerange='&gt;10:24:00' # data after this time
                timerange='09:44:00+00:13:00' #data 13 minutes after time
        scan -- Select data based on scan number
                default: '' (all); example: scan='&gt;3'
        feed -- Selection based on the feed - NOT IMPLEMENTED YET
        array -- Selection based on the antenna array

        -- Vector mode --

        For reasons of performance only, several flagdata task invocations can be
        combined into a single flagdata() run by giving vectors of parameters. 

        Only one mode can be used for all vector entries.

        Example:

            vis = 'my.ms'
            mode = 'manualflag'
            selectdata = True
            flagdata(vis='my.ms', mode='manualflag', autocorr=True)
            flagdata(vis='my.ms', mode='manualflag', field='3', timerange = '6:0:0~6:23:00')
            flagdata(vis='phoenix.ms', mode='manualflag', scan='0', spw='0:60;62;64')

         can be run in one execution step by:

            vis = 'my.ms'
            mode = 'manualflag'
            selectdata = True

            field = ['', '3', '']
            spw = ['', '', '0:60;62:64']
            antenna = ['', '', '']
            clipexpr = ['ABS RR', 'ABS RR', 'ABS RR']
            clipminmax = [[0,0], [0,0], [0,0]]
            clipcolumn = ['DATA', 'DATA', 'DATA']
            clipoutside = [True, True, True]
            autocorr = [True, False, False]
            unflag = [False, False, False]
            correlation = ['', '', '']
            uvrange = ['', '', '']
            timerange = ['', '6:0:0~6:23:0', '']
            scan = ['', '', '0']
            feed = ['', '', '']
            array = ['', '', '']

            flagdata()

            Note:  all vectors must be explicitly given.

 </example>
 </task>
 </casaxml>

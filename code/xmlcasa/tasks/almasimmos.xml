<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">
  
<task type="function" name="almasimmos">

  <shortdescription>ALMA mosaic simulation task (v20090106):</shortdescription>
  <description>
    This is a prototype task which will simulate ALMA data.  
    Please contact CASA helpdesk with questions.
  </description>
  
  <input>
    
<!--  INPUT  -->

    <param type="string" name="modelimage">
      <description>input image name</description>
      <value>pollux.im</value>
    </param>

    <param type="string" name="incell">
      <description>input image pixel size</description>
<!-- add "header" here to use the existing WCS -->
      <value>0.1arcsec</value>
    </param>

    <param type="double" name="inbright">
      <description>input image pk surface brightness (Jy/sq arcsec)</description>
<!-- add "header" here to use the existing WCS-->
      <value>0.1</value>
    </param>

    <param type="string" name="complist">
      <description>componentlist table to observe</description>
      <value></value>
    </param>

<!--  ARRAY  -->

<!-- add telescopename=ALMA,EVLA -->

    <param type="string" name="antennalist" mustexist="true">
      <description>antenna position file</description>
      <value>configs/almaconfig.out10</value>
    </param>
            

<!--  OUTPUT  -->

    <param type="string" name="project">
      <description>root for output files</description>
      <value>sim</value>
    </param>
    
    <param type="string" name="refdate">
      <description>center time/date of observation</description>
      <value>2012/05/21/22:05:00</value>
    </param>
    
    <param type="string" name="totaltime">
      <description>total time of observation</description>
      <value>7200s</value>
    </param>
    
    <param type="string" name="integration">
      <description>integration (sampling) time</description>
      <value>10s</value>
    </param>

<!--    
    <param type="string" name="mode">
      <description>data type: channel, continuum</description>
      <value>continuum</value>		  
      <allowed kind="enum">
	<value>channel</value>
	<value>continuum</value>
      </allowed>
    </param>
-->
    
    <!-- having this an array implies a degree of complexity (multiple spws) that we don't 
	 yet have :)  
	 <param type="stringArray" name="startfreq">
	   -->
    <param type="string" name="startfreq">
      <description>frequency of first channel</description>
      <value>89GHz</value>
    </param>
    
    <!--    <param type="stringArray" name="chanwidth">   -->
    <param type="string" name="chanwidth">
      <description>channel width</description>
      <value>10MHz</value>
    </param>
    
<!--    <param type="int" name="nchan" subparam="true">  -->
    <param type="int" name="nchan">
      <description>number of channels</description>
      <value type="int">1</value>
      <allowed kind="range"><value range="min">1</value></allowed>
    </param>
    
    
    



    <param type="stringArray" name="direction">
      <description>mosaic center, or list of pointings</description>
<!-- eventually, put "header" to use modelimage ctr -->
      <value>J2000 19h00m00 -40d00m00</value>
    </param>

    <param type="string" name="pointingspacing">
      <description>spacing in between beams in mosaic</description>
<!-- allow "pb3,pb2," for fractions of the primary beam --> 
      <value>1arcmin</value>
    </param>
    
    <param type="any" name="relmargin">
      <any type="variant" limittypes="double int"/>
      <description>space btw. pointings and edge, relative to pointingspacing</description>
      <value type="double">1.0</value>
    </param>


    <param type="string" name="cell">
      <description>output cell/pixel size</description>
      <value>0.1arcsec</value>
<!--      <value>incell</value>     -->
    </param>
    

    <param type="intArray" name="imsize">
	    <description>output image size in pixels (x,y) </description>
	    <value type="vector"><value>128</value><value>128</value></value>
    </param>




<!--  IMAGE   -->    

    <param type="int" name="niter">
    <description>Maximum number of iterations</description>
    <value>200</value>
    </param>

    <param type="double" name="threshold" units="mJy">
	    <description>Flux level (+units) to stop cleaning</description>
	    <value>0.0</value>
    </param>

    <param type="string" name="psfmode">
	    <description>method of PSF calculation to use during minor cycles</description>
	    <value>clark</value>
	    <allowed kind="enum">
	      <value>none</value>
	      <value>clark</value>
	      <value>hogbom</value>
	    </allowed>
    </param>

    <param type="string" name="weighting">
    <description>Weighting to apply to visibilities</description>
    <value>natural</value>
    <allowed kind="enum">
	    <value>natural</value>
	    <value>uniform</value>
	    <value>briggs</value>
	    <value>briggsabs</value>
	    <value>radial</value>
	    <value>superuniform</value>
    </allowed>
    </param>

    <param type="double" name="robust" subparam='true'>
	    <description>Briggs robustness parameter</description>
	    <value>0.0</value>
	    <allowed kind="range">
	    <value range="min">-2.0</value>
	    <value range="max">2.0</value>
    </allowed>
    </param>

    <param type="bool" name="uvtaper">
	    <description>Apply additional uv tapering of  visibilities.</description>
	    <value>False</value>
    </param>

    <param type="stringArray" name="outertaper" subparam="true">
	    <description>uv-taper on outer baselines in uv-plane</description>
	    <value type="vector">
	      <value></value>
	    </value>
    </param>

    <param type="stringArray" name="innertaper" subparam="true">
	    <description>uv-taper in center of uv-plane</description>
	    <value>1.0</value>
    </param>

    <param type="double" name="noise" units="Jy" subparam='true'>
	    <description>noise parameter for briggs abs mode weighting</description>
	    <value>0.0</value>
    </param>

    <param type="int" name="npixels" subparam='true'>
	    <description>number of pixels for superuniform or briggs weighting</description>
	    <value>0</value>
    </param>

    <param type="string" name="stokes">
	    <description>Stokes params to image</description>
	    <value>I</value>
    <allowed kind="enum">
	    <value>I</value>
	    <value>IV</value>
	    <value>QU</value>
	    <value>IQUV</value>
	    <value>RR</value>
	    <value>LL</value>
	    <value>RRLL</value>
	    <value>XX</value>
	    <value>YY</value>
	    <value>XXYY</value>
    </allowed>
    </param>




<!--  NOISE  -->

    <param type="bool" name="noise_thermal">
      <description>Add thermal noise</description><value>True</value></param>
    
    <param type="double" name="t_amb" subparam="true">
      <description>ambient temperature</description><value>265.</value></param>
    <!--
	<param type="double" name="t_ground" subparam="true">
	  <description>ambient temperature</description><value>269.</value></param>
	<param type="double" name="t_sky" subparam="true">
	  <description>atmospheric temperature</description><value>263.</value></param>
	-->
    <param type="double" name="tau0" subparam="true">
      <description>zenith opacity</description><value>0.1</value></param>
    


<!--   DISPLAY    -->    
    
    
    <param type="bool" name="fidelity">
      <description>Calculate fidelity images</description>
      <value>True</value>
    </param>
    
    <param type="bool" name="display">
      <description>Plot simulation result images,figures</description>
      <value>True</value>
    </param>
    
    
    
    
    <constraints>
      <when param="noise_thermal">
	<equals type="bool" value="False"/>
	<equals type="bool" value="True">
	  <!--
	      <default param="t_ground"><value>269.</value></default>
	      <default param="t_sky"><value>263.</value></default>
	      -->
	  <default param="t_amb"><value>265.</value></default>
	  <default param="tau0"><value>0.1</value></default>
	</equals>
      </when>
      <!--      -->
      <when param="weighting">
	<equals value="natural"/>
	<equals value="uniform"/>
	<equals value="briggs">
	  <default param="robust"><value>0.0</value></default>
	  <default param="npixels"><value>0</value>
	    <description>number of pixels to determine uv-cell size 0=&gt; field of view</description>
	  </default>
	</equals>
	<equals value="briggsabs">
	  <default param="robust"><value>0.0</value></default>
	  <default param="noise"><value>0.0</value></default>
	  <default param="npixels"><value>0</value>
	    <description>number of pixels to determine uv-cell size 0=&gt; field of view</description>
	  </default>
	</equals>
	<equals value="superuniform">
	  <default param="npixels"><value>0</value>
	    <description>number of pixels to determine uv-cell size 0=&gt; +/-3pixels</description>
	  </default>
	</equals>
      </when>
      <when param="uvtaper">
	<equals type="bool" value="False"/>
	<equals type="bool" value="True">
	  <default param="outertaper"><value type="vector"></value></default>
	  <default param="innertaper"><value type="vector"></value></default>
	</equals>
      </when>
    </constraints>
    
    
    
  </input>
  <returns type="void"/>
  
<example>
ALMA mosaic simulation task (prototype):	

    This task simulates interfermetric observations (currently 
    only ALMA can be done easily).  New functionality is actively 
    being added, so if you have changed versions of CASA, check 
    the inputs carefully.
    Please contact CASA experts with any questions, especially 
    about features noted below as *experimental*    
    -------------------------------
    Keyword arguments:
    -------------------------------
    -- Input Model:
    modelimage -- name of an image to simulate
        *experimental* input images with more than 2 dimensions 
        have not been tested for all possible permutations.
    incell -- pixel size of input image (overrides any value in 
        the image header)
        *experimental* can be set to "header" to use the image header
    inbright -- peak surface brightness to scale input image
    complist -- componentlist table to use to simulate the data.
        May be used with or without modelimage
    antennalist -- ascii file containing antenna positions.
        each row has geocentric x y z coordinates, antenna diam 
    -------------------------------
    -- Output Control:
    project -- Name of project simulated; created ms and images will
        start with this string
    refdate -- Central time of simulated observation eg: '2012/05/21/22:05:00'
    totaltime --- total time of observation e.g '7200s'
    integration --- Time interval for each integration e.g '10s'
    startfreq -- Frequency of first channel e.g '89MHz'
    chanwidth -- Channel width e.g '10MHz'
    nchan -- number of channels (cab be 1 for a continuum simulation)
    direction -- mosaic center direction e.g 'J2000 19h00m00 -40d00m00'
        Can optionally be a list of pointings, which will override
    	pointingspacing.  Otherwise almasimmos will hexagonally
    	pack the input image with pointings.  When direction is a
    	list, the centroid of direction will be used as the center.
    pointingspacing-- spacing in between beams e.g '1arcsec'        
    relmargin -- how close pointing centers may approach the edge of the
        output image, as a fraction of pointingspacing.
    	ignored if direction is a list.
    -------------------------------
    -- Inversion and Deconvolution:
    cell -- Cell size e.g '10arcsec'
        *experimental* can be set to "incell" to use that value.
         This will likely become the default setting.
    imsize -- Image size in spatial pixels (x,y)
    	default = [250,250]; example: imsize=[500,500]
    ** see "help clean" for more information on the new clean 
       parameters introduced in May 2008
    niter -- Number of clean/deconvolution iterations
        0 causes only a dirty image to be created
    threshold -- Flux level to stop cleaning
    psfmode -- minor cycle deconvolution algorithm 
    	Options: 'clark','hogbom','none' 
        ("none" forces niter to 0 and no imaging)
    weighting -- Weighting to apply to visibilities
    	Options: 'natural','uniform','briggs','briggsabs','radial','superuniform'
    robust -- Brigg's robustness parameter 
    	Options: -2.0 to 2.0; -2 (uniform)/+2 (natural)
    uvtaper -- apply additional uv taper of visibilities
    stokes -- Stokes parameters to image
    	default='I'; example: stokes='IQUV'; 
    	&lt;Options: 'I','IV','IQU','IQUV'&gt;
    -------------------------------
    -- Corrupting data:
    noise_thermal -- add thermal noise according to memo 276 
    t_amb -- ambient temperature in K = atmospheric temp 
       (will be separate in future)
    tau0 -- zenith opacity at observing frequency
    -------------------------------
    fidelity -- Calculate fidelity image
    display -- Plot array config, uv coverage, beam, and images


    -------------------------------
    Output produced:
    -------------------------------
    $project.$modelimage.coord = input image recast into 4d image
    $project.$modelimage.coord.regrid = input image regridded to size 
        of output image.   
    $project.convolved.im = input image regridded to output size and 
        convolved with Gaussian synthesized beam for the observation
    $project.ms = synthesized visibilities
    $project.noisy.ms = visibilities with noise added 
      ** if noise is requested, then the noisy visibilities will be 
         used to create the synthsized image.
    $project.dirty.image = output dirty (inverted) synthesized image
    $project.clean.image = output cleaned synthesized image
    $project.clean.psf = output synthesized beam
      ** only one of dirty.image and clean.image will be created as output, 
         depending on whether niter=0 (invert to dirty) or niter>0 (clean)
    $project.diff.im = convolved input - output
    $project.absdiff.im = max[ abs(diff) , 0.7*rms(diff) ]
    $project.fidelity.im = convolved input / absdiff

</example>
</task>
</casaxml>

<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
      file:///opt/casa/code/xmlcasa/xml/casa.xsd">

<task type="function" name="setjy" category="modeling, calibration">
	<shortdescription>Fills the model column with the visibilities of a calibrator</shortdescription>
	<description>
       This task places the model visibility amp and phase associated
       with a specified clean components image into the model column
       of the data set.  The flux density (I,Q,U,V) for a point source
       calibrator can be entered explicitly.

       Models are available for 3C48, 3C138, and 3C286 between
       1.4 and 43 GHz.  3C147 is available above 13 GHz.  These models
       are scaled to the precise frequency of the data.  Only I models are
       presently available.

       The location of the models is system dependent:  At the AOC, the
       models are in the directory::/usr/lib/casapy/data/nrao/VLA/CalModels/
       3C286_L.im (egs)

       setjy need only be run on the calibrator sources with a known flux
       density and/or model.

       Solar System Objects are supported via the 'Butler-JPL-Horizons
       2010' standard.  Currently they are modeled as uniform
       temperature disks based on their ephemerides at the time of
       observation (note that this may oversimplify objects, in
       particular asteroids). Specify the name of the object in the
       'field' parameter. 

	</description>
	<input>
		<param type="string" name="vis" mustexist="true">
			<description>Name of input visibility file</description>
			<value></value>
		</param>

		<param type="string" name="field">
			<description>Field name(s)</description>
			<value></value>
		</param>

		<param type="string" name="spw">
			<description>Spectral window identifier (list)</description>
			<value></value>
		</param>

		<param type="string" name="modimage">
			<description>File location for field model</description>
			<value></value>
		</param>

		<param type="bool" name="listmodimages">
		  <description>List the available modimages</description>
		  <value>False</value>
		</param>

		<param type="bool" name="scalebychan">
		  <description>scale the flux density on a per channel basis or else on a per spw basis</description>
		  <value>False</value>
		</param>
		<param type="any" name="fluxdensity">
			<any type="variant" limittypes="int intArray doubleArray"/>
			<description>Specified flux density [I,Q,U,V]; -1 will lookup values</description>
			<value type="int">-1</value>
		</param>
                <param type="double" name="spix" subparam="true">
			<description>Spectral index of fluxdensity</description>
			<value type="double">0.0</value>
		</param>
		<param type="string" name="reffreq" subparam="true">
			<description>Reference frequency for spix</description>
			<value>1GHz</value>
		</param>

		<param type="string" name="standard">
			<description>Flux density standard</description>
			<value>Perley-Butler 2010</value>
			<allowed kind="enum">
			<value>Perley-Butler 2010</value>
			<value>Perley-Taylor 99</value>
			<value>Baars</value>
			<value>Perley 90</value>
			<value>Perley-Taylor 95</value>
                        <value>Butler-JPL-Horizons 2010</value>
			</allowed>
		</param>
                
                <constraints>
                  <when param="fluxdensity">
                    <notequals type="int" value="-1">
                      <default param="spix"><value type="int">0</value></default>
                      <default param="reffreq"><value type="string">1GHz</value>
                      </default>
                    </notequals>
                  </when>
                </constraints>
	</input>
<returns type="void"/>

<example>

       The task sets the model visibility amp and phase of a
       specified source (generally a calibrator).  The simplest way is
       to enter the flux density (I,Q,U,V) explicitly, but this is
       valid only for a point source.

       For an extended source, the clean model (image.model) can be
       specified and the model visibilities associated with this clean
       model is placed in the visibility model column.

       Models are available for 3C48, 3C138, 3C286 between
       1.4 and 43 GHz.  3C147 is available above 13 GHz.  These models
       are scaled to the precise frequency of the data.  Only I source 
       model can be inserted at a time.

       The location of the models are system dependent:  At the AOC and CV,
       the models are in the directory::/usr/lib/casapy/data/nrao/VLA/CalModels
       or /usr/lib64/casapy/data/nrao/VLA/CalModel.

       setjy need only be run on the calibrator sources with a known flux
       density and/or model.

       Solar System Objects are supported via the 'Butler-JPL-Horizons
       2010' standard.  Currently they are modeled as uniform
       temperature disks based on their ephemerides at the time of
       observation (note that this may oversimply objects, in
       particular asteroids).  The object name is obtained from the
       'field' parameter.  Recognized objects are listed below, under
       'standard'.

       Note that fluxdensity, modimage, and standard interact in a possibly
       confusing way!  Generally, if fluxdensity[0] (Stokes I) is &lt;= 0, it
       will be ignored.  If it is &lt; 0, standard (which has a default) will
       be used to calculate flux density as a function of frequency, even if
       modimage is specified.  If is is exactly 0 and modimage is given, the
       brightness of the model image will be used as is.  If fluxdensity([0])
       is &gt; 0, it will be used.  The latter two options come at the price of
       disabling frequency scaling, i.e. the same fluxdensity will be used for
       all frequencies.

       Keyword arguments:
       vis -- Name of input visibility file
               default: none.  example: vis='ngc5921.ms'
       field -- Select field using field id(s) or field name(s).
              default: ''=all fields, but run setjy one field at a time.
                 [run listobs to obtain the list id's or names of calibrators]
              If field is a non-negative integer, it is assumed to be a field
              index.  Otherwise, it is taken to be a field name (case sensitive
              - it must match the name as listed by listobs).
              field='0~2'; field ids 0,1,2
              field='0,4,5~7'; field ids 0,4,5,6,7
              field='3C286,3C295'; field named 3C286 and 3C295
              field = '3,4C*'; field id 3, all names starting with 4C
       spw -- Spectral window selection string.
              default: '' = all spectral windows
              Note that setjy only selects by spectral window, and ignores
              channel selections.  Fine-grained control could be achieved using
              (and possibly constructing) a cube for modimage.

       modimage -- Model image (I only) for setting the model visibilities.
              modimage can be a cube, and its channels do not have to exactly
              match those of vis.  It is recommended to use modimage for
              sources that are resolved by the observation, but the
              Butler-JPL-Horizons standard supplies a basic model of what
              several Solar System objects look like.  default: '': do not use
              a model image.
       
              Each field must be done separately when using a model image.  The
              flux density of the image will be scaled from the frequency in
              the model to that actually used (ignoring fluxdensity), unless
              fluxdensity &gt;= 0 (or fluxdensity[0] &gt;= 0).  If
              fluxdensity([0]) is 0.0, the image's flux density will be used.
              If fluxdensity([0]) &gt; 0.0, it will be used (and spix and
              reffreq if modimage is not a cube).  Since the spectral index
              usually varies with direction, applying a single spectral index
              to a 2D modimage is typically not as good as using a cube.

              Both the amplitude and phase are calculated.  At the AOC or CV,
              the models are located in casa['dirs']['data']
              + '/nrao/VLA/CalModels/', e.g.
              /usr/lib/casapy/data/nrao/VLA/CalModels/3C286_L.im
                   lib64

              If modimage does not start with '/', setjy will look for a match
              in '.', './CalModels', and any CalModels directories within
              the casa['dirs']['data'] tree (excluding certain branches).

              Note that modimage should be deconvolved, i.e. a set of clean
              components instead of an image that has been convolved with a
              clean beam.

       listmodimages -- If True, do nothing but list candidates for modimage
              that are present on the system.  It looks for *.im* *.mod* in .,
              CalModels, and CalModels directories in the casa['dirs']['data']
              tree.  It does not check whether they are appropriate for the MS!

       scalebychan=False
               This determines whether the fluxdensity set in the model is
               calculated on a per channel basis. If False then it only one
               fluxdensity value is calculated per spw.  (Either way, all channels
               in spw are modified.)  It is effectively True if fluxdensity[0] &gt;
               0.0.

       fluxdensity -- Specified flux density [I,Q,U,V] in Jy
               default: -1, uses [1,0,0,0] flux density for unrecognized sources,
               and standard flux densities for ones recognized by 'standard',
               including 3C286, 3C48, 3C147, and several planets, moons, and
               asteroids.
               Only one flux density can be specified at a time.  The phases are
                  set to zero.
               example   fluxdensity=-1  will insert 1.0 for all calibrators
                         except 3C286, 3C147 and 3C48.
               example   field = '1'; fluxdensity=[3.2,0,0,0] wil put in 
                         a flux density of I=3.2 for field='1'

               At present (June 2000), this is the only method to insert a
               polarized flux density model.
               example:  fluxdensity=[2.63,0.21,-0.33,0.02]
                         will put in I,Q,U,V flux densities of 2.63,0.21,-0.33,
                         and 0.02, respectively, in the model column.

       spix -- Spectral index for fluxdensity: S = fluxdensity * (freq/reffreq)**spix
               Default: 0
               Only used if fluxdensity is being used.
               N.B.: It is applied in the same way to all polarizations, and does
                     not account for Faraday rotation or depolarization.

       reffreq -- The reference frequency for spix.  Default: '1GHz'

       standard -- Flux density standard, used if fluxdensity[0] &lt; 0.0
               default: 'Perley-Butler 2010'; example: standard='Baars'
               Options: 'Baars','Perley 90','Perley-Taylor 95',
                  'Perley-Taylor 99', 'Perley-Butler 2010',
                  and 'Butler-JPL-Horizons 2010'.
               All but the last one are for extragalactic calibrators,
               and the final one is for Solar System objects.  Recognized Solar
               System objects are: 

	       Planets:  Mars, Jupiter, Uranus, Neptune, Pluto*
	       
	       Moons: Jupiter: Io, Europa, Ganymede, Callisto
                      Saturn:  Titan <!-- Mimas, Enceladus, Tethys, Dione,  
		                     Hyperion, Iapetus, Phoebe, Janus, Epimetheus, Helene, 
                                     Telesto, Calypso, Atlas,Prometheus, Pandora, Pan -->
                      <!-- Uranus moons:  Ariel, Umbriel, Titania, Oberon, Miranda, Cordelia,
                                     Ophelia, Bianca, Cressida, Desdemona, Juliet, Portia, 
                                     Rosalind, Belinda, Puck -->
                      Neptune: Triton 
                      <!-- Pluto moon:    Charon -->
	       
               Asteroids: Ceres, Pallas**, Vesta**, Juno**, Victoria**, Davida**
 
               * Pluto alone.  No allowance is made for the possibility of Charon
                 being in the field.

               ** not recommended (The temperature is not yet adjusted for
                  varying distance from the Sun.  The model data can be scaled
                  after running setjy, but it is an involved process.)

	       The 'field' parameter must match the case of the field name(s)
	       in vis (as shown by listobs).

               Flux density calculation with Solar System objects depends on
               ephemerides.  setjy looks, in order, in
               '.',
               user.ephemerides.directory (a ~/.casarc option), and
               os.getenv('CASAPATH').split()[0] + '/data/ephemerides/JPL-Horizons'.

               If no ephemeris for the right object at the right time is
               present, the calculation will fail.  Ask the helpdesk to make an
               ephemeris.  The very adventurous and well versed in python can
               try it using CASA's recipes.ephemerides package:
	         import recipes.ephemerides as eph
		 help eph

               CASA comes with ephemerides for several more objects, but they
               are intended for use with me.framecomet(), and are not (yet)
               suitable flux density calibrators.  It is up to the observer to
               pick a good flux density calibrator (bright, spherical and
               featureless, on a circular orbit, in the right part of the sky,
               and not too resolved).  Even some of the objects listed above
               may prove to require more sophisticated flux density models than
               are currently implemented in CASA.  For many objects running
	       casalog.filter('INFO1') before running setjy will send more
	       information to the logger.  The cookbook also has an appendix
	       with descriptions of the models used by setjy (both
	       extragalactic and Solar System).
 </example>
 </task>
 </casaxml>

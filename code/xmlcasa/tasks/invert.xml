<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/xmlcasa/xml/casa.xsd">


<task type="function" name="invert">

  <shortdescription>Calculate the dirty image and dirty beam from a visibility set</shortdescription>

  <description>Calculate the dirty image and dirty beam from a visibility set.</description>

  <input>

    <param type="string" name="vis" kind="ms" mustexist="true">
    <description>name of input visibility file</description>
    <value></value>
    </param>

    <param type="string" name="imagename">
	    <description>Pre-name of output images</description>
	    <value></value>
    </param>

    <param type="string" name="mode">
	    <description>Type of selection (mfs, channel, velocity, frequency)</description>
	    <allowed kind="enum">
	    <value>mfs</value>
	    <value>channel</value>
	    <value>velocity</value>
	    <value>frequency</value>
    </allowed>
    </param>

    <param type="int" name="nchan" subparam="true">
	    <description>Number of channels (planes) in output image</description>
	    <value>1</value>
    </param>

    <param type="any" name="start" subparam="true">
	    <description>First channel in input to use</description>
	    <any type="variant"/>
	    <value type="int">0</value>
    </param>

    <param type="any" name="width" subparam="true">
	    <description>Number of input channels to average</description>
	    <any type="variant"/>
	    <value type="int">1</value>
    </param>


    <param type="intArray" name="imsize">
	    <description>x and y image size in pixels, symmetric for single value</description>
	    <value type="vector">
    <value>256</value><value>256</value>
	    </value>
    </param>

    <param type="doubleArray" name="cell" units="arcsec">
    <description>x and y cell size. default unit radians</description>
    <value type="vector"><value>1.0</value><value>1.0</value></value>
    </param>

    <param type="string" name="stokes">
	    <description>Stokes params to image (eg I,IV, QU,IQUV)</description>
	    <value>I</value>
    <allowed kind="enum">
	    <value>I</value>
	    <value>IV</value>
	    <value>QU</value>
	    <value>IQUV</value>
	    <value>RR</value>
	    <value>LL</value>
	    <value>RRLL</value>
	    <value>XX</value>
	    <value>YY</value>
	    <value>XXYY</value>
    </allowed>
    </param>

    <param type="string" name="field">
    <description>Field Name</description>
    <value></value>
    </param>

    <param type="any" name="spw">
	    <description>Spectral windows:channels: \'\' is all </description>
	    <any type="variant"/>
	    <value type="string"></value>
    </param>

    <param type="string" name="weighting">
    <description>Weighting to apply to visibilities</description>
    <value>natural</value>
    <allowed kind="enum">
	    <value>natural</value>
	    <value>uniform</value>
	    <value>briggs</value>
	    <value>radial</value>
	    <value>superuniform</value>
    </allowed>
    </param>

    <param type="string" name="rmode" subparam='yes'>
	    <description>Robustness mode (see help clean)</description>
	    <value>norm</value>
    <allowed kind="enum">
	    <value>none</value>
	    <value>norm</value>
	    <value>abs</value>
    </allowed>
    </param>

    <param type="double" name="robust" subparam='yes'>
	    <description>Briggs robustness parameter</description>
	    <value>0.0</value>
	    <allowed kind="range">
	    <value range="min">-2.0</value>
	    <value range="max">2.0</value>
    </allowed>
    </param>
    
    <param type="string" name="noise" units="Jy" subparam='true'>
      <description>noise parameter for briggs weighting when rmode=\'abs\'</description>
      <value>0.0Jy</value>
    </param>

    <param type="int" name="npixels" subparam='true'>
      <description>number of pixels for superuniform or briggs weighting</description>
      <value>0</value>
    </param>


    <param type="string" name="restfreq">
	    <description>rest frequency to assign to image (see help)</description>
	    <value></value>
    </param>

    <param type="any" name="phasecenter">
	    <description>Image phase center: position or field index</description>
	    <any type="variant"/>
	    <value type="string"></value>
    </param>

    <constraints>
	    <when param="mode">
		<equals value="mfs"/>
		<equals value="channel">
			<default param="nchan"><value>1</value></default>
			<default param="start"><value>0</value>
			    <description>first input channel to use</description>
			</default>
			<default param="width"><value>1</value></default>
		</equals>
	        <equals value="velocity">
			<default param="nchan"><value>1</value></default>
			<default param="start"><value type="string">0.0km/s</value>
			    <description>Velocity of first image channel: e.g \'0.0km/s\'</description>
		    </default>
		    <default param="width"><value type="string">1km/s</value>
			    <description>image channel width in velocity units: e.g \'-1.0km/s\'</description>
		    </default>
	        </equals>
	        <equals value="frequency">
			<default param="nchan"><value>1</value></default>
			<default param="start"><value type="string">1.4GHz</value>
			    <description>Frequency of first image channel: e.q. \'1.4GHz\'</description>
		    </default>
		    <default param="width"><value type="string">10kHz</value>
			    <description>Image channel width in frequency units: e.g \'1.0kHz\'</description>
		    </default>
	        </equals>
	    </when>
	    <when param="weighting">
		<equals value="natural"/>
	        <equals value="uniform"/>
	        <equals value="briggs">
			<default param="rmode"><value type="string">norm</value></default>
			<default param="robust"><value>0.0</value></default>
			<default param="noise"><value type="string">0.0Jy</value></default>
			<default param="npixels"><value>0</value>
			    <description>number of pixels to determine uv-cell size 0=&gt; field of view</description>
		    </default>
	        </equals>
	        <equals value="superuniform">
			<default param="npixels"><value>0</value>
			    <description>number of pixels to determine uv-cell size 0=&gt; +/-3pixels</description>
		    </default>
	        </equals>
            </when>
    </constraints>

    </input>

  <returns type="void"/>

  <example>

        Calculate the dirty image and dirty beam from a visibility set.

        Keyword arguments:
        vis -- Name of input visibility file
                default: none; example: vis='ngc5921.ms'
        imagename -- Pre-name of output images:
                default: none; example: imagename='n5921' produces
                n5921.dirty, n5921.beam
        mode -- Frequency Specification:
           NOTE: See examples below:
                default: 'mfs'
                  mode = 'mfs' means produce one image from all specified data.
                  mode = 'channel'; Use with nchan, start, width to specify
                      output image cube.  See examples.
                  mode = 'velocity', means channels are specified in velocity.
                  mode = 'frequency', means channels are specified in frequency.
     &lt; &lt; &lt;  mode expandable parameters (for modes other than 'mfs')
               Start, width are given in units of channels, frequency or velocity
                  as indicated by mode, but only channel now recommended.
               nchan -- Number of channels (planes) in output image
                 default: 1; example: nchan=3
               start -- Start input channel (relative-0)
                 default=0; example: start=5
               width -- Output channel width (&gt;1 indicates channel averaging)
                 default=1; example: width=4
           examples:
               spw = '0,1'; mode = 'mfs'
                  will produce one image made from all channels in spw 0 and 1
               spw='0:5~28^2'; mode = 'mfs' 
                  will produce one image made with channels (5,7,9,...,25,27)
               spw = '0'; mode = 'channel': nchan=3; start=5; width=4
                  will produce an image with 3 output planes
                  plane 1 contains data from channels (5+6+7+8)
                  plane 2 contains data from channels (9+10+11+12)
                  plane 3 contains data from channels (13+14+15+16)
               spw = '0:0~63^3'; nchan=21; start = 0; width = 1
                  will produce an image with 20 output planes
                  Plane 1 contains data from channel 0
                  Plane 2 contains date from channel 2
                  Plane 21 contains data from channel 61
               spw = '0:0~40^2'; mode = 'channel'; nchan = 3; start = 5; width = 4
                  will produce an image with three output planes
                  plane 1 contains channels (5,7)
                  plane 2 contains channels (13,15)
                  plane 3 contains channels (21,23)

        --- Image Specifications
        imsize -- Image size in pixels (x,y)
                default = [256,256]; example: imsize=[350,350]
                imsize = 500 is equivalent to [500,500]
        cell -- Cell angular size (x,y)
                default= none;
                example: cell=['0.5arcsec,'0.5arcsec'] or
                cell=['1arcmin', '1arcmin']
                cell = '1arcmin' is equivalent to ['1arcmin','1arcmin']
        cell = '2' makes default cell size of 2 radians!
        stokes -- Stokes parameters to image
                default='I'; example: stokes='IQUV';
                Options: 'I','IV','QU','IQUV''RR','LL','RRLL','XX','YY','XXYY'
        field -- Select field using field id(s) or field name(s).
                  [run listobs to obtain the list id's or names]
                default: '0'
               If field string is a non-negative integer, it is assumed a field index
                 otherwise, it is assumed a field name
               field='0~2'; field ids 0,1,2
               field='0,4,5~7'; field ids 0,4,5,6,7
               field='3C286,3C295'; field named 3C286 adn 3C295
               field = '3,4C*'; field id 3, all names starting with 4C
        spw -- Select spectral window/channels
              default: ''=all spectral windows and channels
              spw='0~2,4'; spectral windows 0,1,2,4 (all channels)
              spw='&lt;2';  spectral windows less than 2 (i.e. 0,1)
              spw='0:5~61'; spw 0, channels 5 to 61
              spw='0,10,3:3~45'; spw 0,10 all channels, spw 3, channels 3 to 45.
              spw='0~2:2~6'; spw 0,1,2 with channels 2 through 6 in each.
              spw='0:0~10;15~60'; spectral window 0 with channels 0-10,15-60
              spw='0:0~10,1:20~30,2:1;2;4'; spw 0, channels 0-10,
                       spw 1, channels 20-30, and spw 2, channels, 1,2 and 4
        weighting -- Weighting to apply to visibilities:
                default='natural'; example: weighting='uniform';
                Options: 'natural','uniform','briggs','radial', 'superuniform'
                For weighting='briggs', SEE Reference Manual--imager--imager.weight. 
        rmode -- Robustness mode (for use with Brigg's weighting)
                default='none'; example='abs';
                Options: 'norm','abs','none'
        robust -- Brigg's robustness parameter
                default=0.0; example: robust=0.5;
                Options: -2.0 to 2.0; -2 (uniform)/+2 (natural)
        restfreq -- Specify rest frequency to use for image
               default='' (i.e., try to use the restfreq specified in the visibility data)
        phasecenter -- direction measure  or fieldid for the image center
                default: ''; =&gt;center is the direction of the first field specified in field;
        example: phasecenter='6'
                or phasecenter='J2000 19h30m00.0 -40d00m00.0'


  </example>

</task>

</casaxml>

#!/usr/bin/perl
use local::lib;
use HTML::TreeBuilder;
use HTML::PrettyPrinter;
use HTML::Element;
use File::Basename;
use FileHandle;

die "a single argument (report file path) is required" unless scalar(@ARGV) == 1;
die "report file does not exit" unless -f $ARGV[0];

$reportfile = $ARGV[0];

$reportdir = dirname($reportfile);
die "failed to find report path" unless -d $reportdir;

###
### find the version information
###
die "no version information (i.e. version.txt file) in '$reportdir'" unless -f "$reportdir/version.txt";
open( V, "<", "$reportdir/version.txt");
$v = <V>;
close(V);
die "version file format error" unless $v =~ m|^VERSION>\s+([0-9.]+)\s+(\d+)|;
$version = $1;
$revision = $2;

###
### parse html...
###
my $html = HTML::TreeBuilder->new;
$html->store_comments(1);
$html->parse_file($reportfile);

###
### extract and replace title
###
my $title = $html->look_down('_tag', 'h1');
die "cannot find title content" unless defined $$title{'_content'};
$ary = $$title{'_content'};
$$ary[0] = "CASA $version Regressions (r$revision)";

###
### output new HTML document...
### ...(using PrettyPrinter because otherwise it is one long line)...
###
my $hpp = new HTML::PrettyPrinter ('linelength' => 90,'quote_attr' => 1);
$html->address("0.1.0")->attr(_hpp_indent,0);    # for an individual element
$hpp->set_force_nl(1,qw(body head));             # for tags
$hpp->set_force_nl(1,qw(@SECTIONS));             # as above
$hpp->set_nl_inside(0,'default!');               # for all tags
$hpp->allow_forced_nl(1);


rename($reportfile,"$reportfile.orig") or die "could not rename report file";
$fh = FileHandle->new($reportfile,"w");
die "could not open output file" unless defined $fh;

$hpp->select($fh);
$hpp->format($html);
undef $fh;               ### close file

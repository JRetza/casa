1 - longueur=0.01km
1 - longueur=10m
1 - 10010
1 - 10010
1 - 10.01KM
1 - 10.01km
1 - 19.98 SI units
1 - 19980mm
1 - 10km * 3 = 30000m
1 - Length P(10) ==> P=10
1 - Length p=P; ==> p=10
1 - Test for the relational operators:
1 - p>=P
1 - p<=P
1 - p==P
1 - Arithmetic operations:
1 - p=P+p ==> p=20
1 - P=10 must not change of value!
1 - p=p+P ==> p=30
1 - P=10 must not change of value!
1 - Let declare p0 be of type Length using the default constructor: Length p0;
1 - p0 = p+P with p=30 and P=10 ==> p0=p+P=40
1 - Let declare p0 be of type Length using the default constructor: Length p1;
1 - With no assignement its value must be 0: p1=0
1 - Test relational operator P>p: OK
1 - Test relational operator p!=P: OK
1 - Some more tests for arithmetic expressions 
1 - Assign the value of P to p1: p1=P ==> p1=10
1 - Arithmetic sum: p1+p+P=50
1 - Arithmetic difference: p1-p-P=10
1 - Product by a scalar p1=p1*2.0=20000mm
1 - p0=40
1 - p1=p0*2.0=80000mm
1 - --------------------------------------------------------------------------
1 - | Note that the commutativity of the oprator * has not been implemented! |
1 - --------------------------------------------------------------------------
1 - p0=40 must have not changed of value
1 - p1=80
1 - p1=p1/2.0=40000mm
1 - p1=p0/2.0=20000mm
1 - -----------------------------------------------------------------------
1 - | Note that dividing by a physical quantity has not been implemented! |
1 - -----------------------------------------------------------------------
1 - 
1 - Some more tests for arithmetic expressions 
1 - p0=40  must have not changed of value
1 - P=10
1 - p1=p0*2.0E0+P=90
1 - 
1 - TESTBED done 

<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" ?>
<casaxml xmlns="http://casa.nrao.edu/schema/psetTypes.html"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://casa.nrao.edu/schema/casa.xsd
file:///opt/casa/code/tools/xml/casa.xsd">


        <tool name="testflagger" module="testflagger">
<code>
	<include>tools/flagging/testflagger_forward.h</include>
<private>
	<include>tools/flagging/testflagger_private.h</include>
</private>
</code>

        <shortdescription>Refactored tool for manual and automated flagging</shortdescription>
       
<description>
The {\tt testflagger} tool performs manual as well as automatic synthesis
flagging operations within casapy. The {\tt testflagger} tool can operate on
one measurement set at a time.  
</description>

<!-- ********************************************************************** -->

   <method type="constructor" name="testflagger">
   <shortdescription>Construct a flag tool</shortdescription>
   
<description>
Create a {\tt testflagger} tool, and initializes some variables.
</description>
<input>

</input>
<returns type="unknown">testflagger tool</returns>
<example>

tf.testflagger()      

</example>
</method>

<!-- ********************************************************************** -->

   <method type="function" name="done">
   <shortdescription>Destroys the flag tool</shortdescription>
   
<returns type="bool"/>
<example>
tf.done()

</example>
</method>

<!-- ********************************************************************** -->

   <method type="function" name="open">
   <shortdescription>Opens the MS and attaches it to the tool.</shortdescription>

<input>

     <param type="string" name="msname">
     <description>Measurement set to be processed. Default:  </description>
     <value>''</value>
     </param>
     <param type="double" name="ntime">
     <description>Time interval. If not given, the default will be used. Default: </description>
     <value>0.0</value>
     </param>
</input>

<example>
tf.open(msname,ntime)
</example>
<returns type="bool"/> 
</method>


<!-- ********************************************************************** -->

 
   <method type="function" name="selectdata">
   <shortdescription>Selects the data based on the given parameters.
For unspecified parameters, the full data range is assumed.
All data selection parameters follow the ms-selection syntax.
    </shortdescription>

<input>

<!-- Selection parameters : start -->
     <param type="record" name="config"> 
     <description>The record (dictionary) config may be given or not. If it is not given, 
     \n the whole MS will be selected. The record may contain any data selection parameters 
     \n supported by MSSelection such as\n:
     </description>     
     </param>

     <param type="string" name="field">
     <description>\tField indices or source names : example : '2,3C48' </description>
     <value></value>
     </param>
     
     <param type="string" name="spw">
     <description>\tSpectral Window Indices or names : example : '1,2' </description>
     <value></value>
     </param>
    
     <param type="string" name="array">
     <description>\tArray Indices or names : example : 'VLAA' </description>
     <value></value>
     </param>
    
     <param type="string" name="feed">
     <description>\tFeed index or name : example : '1,2' (not supported yet) </description>
     <value></value>
     </param>
    
     <param type="string" name="scan">
     <description>\tScan number : example : '1,2,3' </description>
     <value></value>
     </param>   

     <param type="string" name="baseline">
     <description>\tBaseline number : example : '2-3,4-5,132 ????' </description>
     <value></value>
     </param>
    
     <param type="string" name="uvrange">
     <description>\tUV-distance range, with a unit : example : '2.0-3000.0 m'</description>
     <value></value>
     </param>
    
     <param type="string" name="time">
     <description>\tTime range, as MJDs or date strings : example : 'xx.x.x.x.x~yy.y.y.y.y'</description>
     <value></value>
     </param>

     <param type="string" name="correlation">
     <description>\tCorrelations/polarizations : example : 'RR,LL,RL,LR,XX,YY,XY,YX'</description>
     <value></value>
     </param>

     <param type="string" name="intent">
     <description>\tScan intent : example : '*CAL*, *BAND*' </description>
     <value></value>
     </param>
     
     <param type="string" name="observation">
     <description>\tObservation Id : example : '2~4' </description>
     <value></value>
     </param>

<!-- Selection parameters : end -->
     
</input>
<example>
Select the whole MS
tf.selectdata()

Select a portion of the MS
myrecord={}
myrecord['scan']='1~3'
myrecord['spw']='0:1~10'
tf.selectdata(myrecord)

Another way to select a portion of the MS
tf.selectdata(scan='3~5', spw='0')
</example>

<returns type="bool"/> 
</method>


<!-- ********************************************************************** -->

   <method type="function" name="parseagentparameters">
   <shortdescription>Parses the parameters for the agent (flagging mode).</shortdescription>
   
<description>The specific data selection parameters for the agent (flagging mode)
are parsed. These parameters are the data selection and mode-specific parameters.
See the example below:
</description>

<input>

     <param type="record" name="aparams">
     <description>It takes a record (dictionary) with the specific parameters for the flagging mode. 
     \n The record may contain any data selection parameters supported by MSSelection, as well as 
     \n mode-specific parameters such as:\n
     \n (1) array,feed,scan,field,spw,intent,correlation,antenna,uvrange,observation
     \n (2) mode (which can be: manual,clip,quack,shadow,elevation,tfcrop,extendflags,unflag or summary)
     \n     For flagging mode=clip, the parameters are: expression, datacolumns, clipminmax, etc.
     \n     See the documentation of the task tflagger for all the available parameters for each mode.\n
     \n (3) apply: default is true (true for flagging and false for unflagging)
     \n Example:\n\n
myrecord={}\n
myrecord['mode']='clip'\n
myrecord['scan']='1~3'\n
myrecord['clipminmax']=[0.02,0.3]\n
myrecord['apply']=True\n
tf.parseAgentParameters(myrecord)\n
     
     </description>
     </param>
     
</input>
<example>
myrecord={}
myrecord['mode']='clip'
myrecord['scan']='1~3'
myrecord['clipminmax']=[0.02,0.3]
myrecord['apply']=True
tf.parseAgentParameters(myrecord)
</example>
<returns type="bool"/> 
</method>


<!-- ********************************************************************** -->

   <method type="function" name="init">
   <shortdescription>Initialize the agents</shortdescription>
   
<description>This method will initialize the agents and create a list of agents.
with their parameters. It takes no parameters.
</description>

<input>
</input>
<returns type="bool"/> 
</method>

<!-- ********************************************************************** -->

   <method type="function" name="run">
   <shortdescription>Executes a flagging run</shortdescription>
   
<description>
Executes a flagging run.
</description>
<input>
     <param type="bool" name="writeflags">
     <description>Write flags to MS</description>
     <value>true</value>
     </param>

     <param type="bool" name="sequential">
     <description>Run the task in sequential or parallel mode</description>
     <value>false</value>
     </param>

</input>
<returns type="record"/>
<example>
</example>
</method>


<!-- ********************************************************************** -->

    <method type="function" name="getflagversionlist">
   <shortdescription>*** \n Print out a list of saved flag_versions. 
              ***</shortdescription>
<description> 
Print out the list of flag versions in the MS, unless the parameter printflags=False. The list of names is returned.
</description>
<input>
     <param type="bool" name="printflags">
     <description>Print flagversions in logger?</description>
     <value>true</value>
     </param>
</input>
<returns type="stringArray"/>
</method>

<!-- ********************************************************************** -->

   <method type="function" name="printflagselection">
   <shortdescription>Print out a list of current manual and auto flag selections.
   </shortdescription>
   
<description>
Print out a list of current manual and auto flag selections.
</description>
<input>
</input>
<returns type="bool"/>
</method>

<!-- ********************************************************************** -->

   <method type="function" name="saveflagversion">
   <shortdescription>*** \n Save current flags with a version name.*** 
            </shortdescription>
<description> 
</description>
<input>
     <param type="string" name="versionname">
     <description>Version name </description>
     <value></value>
     </param>
     <param type="string" name="comment">
     <description>Comment for this flag table </description>
     <value></value>
     </param>
     <param type="string" name="merge">
     <description>merge type </description>
     <value></value>
     </param>
</input>
<returns type="bool"/>
</method>

<!-- ********************************************************************** -->

   <method type="function" name="parsemanualparameters">
   <shortdescription>Parses data selection parameters and specific parameters
for the manual mode.
    </shortdescription>

<input>

<!-- Selection parameters : start -->
     <param type="string" name="field">
     <description>\tField indices or source names. Example: '2,3C48' </description>
     <value></value>
     </param>
     
     <param type="string" name="spw">
     <description>\tSpectral Window Indices or names. Example: '1,2' </description>
     <value></value>
     </param>
    
     <param type="string" name="array">
     <description>\tArray Indices or names. Example: 'VLAA' </description>
     <value></value>
     </param>
    
     <param type="string" name="feed">
     <description>\tFeed index or name. Eexample: '1,2' (not supported yet) </description>
     <value></value>
     </param>
    
     <param type="string" name="scan">
     <description>\tScan number. Example: '1,2,3' </description>
     <value></value>
     </param>   

     <param type="string" name="baseline">
     <description>\tBaseline number. Example: '2-3,4-5,132 ????' </description>
     <value></value>
     </param>
    
     <param type="string" name="uvrange">
     <description>\tUV-distance range, with a unit. Example: '2.0-3000.0 m'</description>
     <value></value>
     </param>
    
     <param type="string" name="time">
     <description>\tTime range, as MJDs or date strings. Example: 'xx.x.x.x.x~yy.y.y.y.y'</description>
     <value></value>
     </param>

     <param type="string" name="correlation">
     <description>Correlations/polarizations. Example: 'RR,LL,RL,LR,XX,YY,XY,YX'</description>
     <value></value>
     </param>

     <param type="string" name="intent">
     <description>\tScan intent. Example: '*CAL*, *BAND*' </description>
     <value></value>
     </param>
     
     <param type="string" name="observation">
     <description>Observation Id. Example: '2~4' </description>
     <value></value>
     </param>

     <param type="bool" name="apply">
     <description>\tParameter to flag or unflag the data. Default: </description>
     <value>true</value>
     </param>

<!-- Selection parameters : end -->
     
</input>
<example>
</example>

<returns type="bool"/> 
</method>

<!-- ********************************************************************** -->

   <method type="function" name="parseclipparameters">
   <shortdescription>Parses data selection parameters and specific parameters
   for the clip mode.
    </shortdescription>

<input>

<!-- Selection parameters : start -->
     <param type="string" name="field">
     <description>\tField indices or source names. Example: '2,3C48' </description>
     <value></value>
     </param>
     
     <param type="string" name="spw">
     <description>\tSpectral Window Indices or names. Example: '1,2' </description>
     <value></value>
     </param>
    
     <param type="string" name="array">
     <description>\tArray Indices or names. Example: 'VLAA' </description>
     <value></value>
     </param>
    
     <param type="string" name="feed">
     <description>\tFeed index or name. Eexample: '1,2' (not supported yet) </description>
     <value></value>
     </param>
    
     <param type="string" name="scan">
     <description>\tScan number. Example: '1,2,3' </description>
     <value></value>
     </param>   

     <param type="string" name="baseline">
     <description>\tBaseline number. Example: '2-3,4-5,132 ????' </description>
     <value></value>
     </param>
    
     <param type="string" name="uvrange">
     <description>\tUV-distance range, with a unit. Example: '2.0-3000.0 m'</description>
     <value></value>
     </param>
    
     <param type="string" name="time">
     <description>\tTime range, as MJDs or date strings. Example: 'xx.x.x.x.x~yy.y.y.y.y'</description>
     <value></value>
     </param>

     <param type="string" name="correlation">
     <description>Correlations/polarizations. Example: 'RR,LL,RL,LR,XX,YY,XY,YX'</description>
     <value></value>
     </param>

     <param type="string" name="intent">
     <description>\tScan intent. Example: '*CAL*, *BAND*' </description>
     <value></value>
     </param>
     
     <param type="string" name="observation">
     <description>Observation Id. Example: '2~4' </description>
     <value></value>
     </param>

     <param type="string" name="expression">
     <description>\tExpression to flag on. Example: 'ABS I'. Default: 
     </description>
     <value>ABS ALL</value>
     </param>
    
     <param type="string" name="datacolumn">
     <description>\tData column to use for clipping. Example: 'DATA'. Default:
     </description>
     <value>DATA</value>
     </param>

     <param type="doubleArray" name="clipminmax">
     <description>\tRange to use for clipping. Example: [100.0,200.0] 
     </description>
     <value type="vector"></value>
     </param>
     
     <param type="bool" name="clipoutside">
     <description>Clip points outside this range? [True/False]. Default:
     </description>
     <value>true</value>
     </param>
    
     <param type="bool" name="channelavg">
     <description>\tAverage data over channels before clipping? [True/False]. Default:
     </description>
     <value>false</value>
     </param>

     <param type="bool" name="apply">
     <description>\tParameter to flag or unflag data. Default: </description>
     <value>true</value>
     </param>

<!-- Selection parameters : end -->
     
</input>
<example>
</example>

<returns type="bool"/> 
</method>

</tool>
</casaxml>



